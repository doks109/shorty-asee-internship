/*
 * shorty_asee_internship API
 * shorty_asee_internship API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RedirectView
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-09T12:06:14.398888500+02:00[Europe/Zagreb]")
public class RedirectView {
  public static final String SERIALIZED_NAME_HOSTS = "hosts";
  @SerializedName(SERIALIZED_NAME_HOSTS)
  private List<String> hosts = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "contentType";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_REQUEST_CONTEXT_ATTRIBUTE = "requestContextAttribute";
  @SerializedName(SERIALIZED_NAME_REQUEST_CONTEXT_ATTRIBUTE)
  private String requestContextAttribute;

  public static final String SERIALIZED_NAME_STATIC_ATTRIBUTES = "staticAttributes";
  @SerializedName(SERIALIZED_NAME_STATIC_ATTRIBUTES)
  private String staticAttributes;

  public static final String SERIALIZED_NAME_EXPOSE_PATH_VARIABLES = "exposePathVariables";
  @SerializedName(SERIALIZED_NAME_EXPOSE_PATH_VARIABLES)
  private Boolean exposePathVariables;

  public static final String SERIALIZED_NAME_BEAN_NAME = "beanName";
  @SerializedName(SERIALIZED_NAME_BEAN_NAME)
  private String beanName;

  public static final String SERIALIZED_NAME_APPLICATION_CONTEXT = "applicationContext";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CONTEXT)
  private Object applicationContext;


  public RedirectView hosts(List<String> hosts) {
    
    this.hosts = hosts;
    return this;
  }

  public RedirectView addHostsItem(String hostsItem) {
    if (this.hosts == null) {
      this.hosts = new ArrayList<String>();
    }
    this.hosts.add(hostsItem);
    return this;
  }

   /**
   * Get hosts
   * @return hosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getHosts() {
    return hosts;
  }


  public void setHosts(List<String> hosts) {
    this.hosts = hosts;
  }


  public RedirectView url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public RedirectView contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public RedirectView requestContextAttribute(String requestContextAttribute) {
    
    this.requestContextAttribute = requestContextAttribute;
    return this;
  }

   /**
   * Get requestContextAttribute
   * @return requestContextAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRequestContextAttribute() {
    return requestContextAttribute;
  }


  public void setRequestContextAttribute(String requestContextAttribute) {
    this.requestContextAttribute = requestContextAttribute;
  }


  public RedirectView staticAttributes(String staticAttributes) {
    
    this.staticAttributes = staticAttributes;
    return this;
  }

   /**
   * Get staticAttributes
   * @return staticAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStaticAttributes() {
    return staticAttributes;
  }


  public void setStaticAttributes(String staticAttributes) {
    this.staticAttributes = staticAttributes;
  }


  public RedirectView exposePathVariables(Boolean exposePathVariables) {
    
    this.exposePathVariables = exposePathVariables;
    return this;
  }

   /**
   * Get exposePathVariables
   * @return exposePathVariables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getExposePathVariables() {
    return exposePathVariables;
  }


  public void setExposePathVariables(Boolean exposePathVariables) {
    this.exposePathVariables = exposePathVariables;
  }


  public RedirectView beanName(String beanName) {
    
    this.beanName = beanName;
    return this;
  }

   /**
   * Get beanName
   * @return beanName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBeanName() {
    return beanName;
  }


  public void setBeanName(String beanName) {
    this.beanName = beanName;
  }


  public RedirectView applicationContext(Object applicationContext) {
    
    this.applicationContext = applicationContext;
    return this;
  }

   /**
   * Get applicationContext
   * @return applicationContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getApplicationContext() {
    return applicationContext;
  }


  public void setApplicationContext(Object applicationContext) {
    this.applicationContext = applicationContext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedirectView redirectView = (RedirectView) o;
    return Objects.equals(this.hosts, redirectView.hosts) &&
        Objects.equals(this.url, redirectView.url) &&
        Objects.equals(this.contentType, redirectView.contentType) &&
        Objects.equals(this.requestContextAttribute, redirectView.requestContextAttribute) &&
        Objects.equals(this.staticAttributes, redirectView.staticAttributes) &&
        Objects.equals(this.exposePathVariables, redirectView.exposePathVariables) &&
        Objects.equals(this.beanName, redirectView.beanName) &&
        Objects.equals(this.applicationContext, redirectView.applicationContext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hosts, url, contentType, requestContextAttribute, staticAttributes, exposePathVariables, beanName, applicationContext);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedirectView {\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    requestContextAttribute: ").append(toIndentedString(requestContextAttribute)).append("\n");
    sb.append("    staticAttributes: ").append(toIndentedString(staticAttributes)).append("\n");
    sb.append("    exposePathVariables: ").append(toIndentedString(exposePathVariables)).append("\n");
    sb.append("    beanName: ").append(toIndentedString(beanName)).append("\n");
    sb.append("    applicationContext: ").append(toIndentedString(applicationContext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

